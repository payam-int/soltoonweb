# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-20 15:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='userfiles/', verbose_name='file')),
                ('file_type', models.CharField(choices=[('TARGZ', '.tar.gz'), ('ZIP', '.zip'), ('RAR', '.rar')], max_length=5, verbose_name='file type')),
                ('status', models.IntegerField(choices=[(0, 'uploaded'), (2, 'compiled'), (1, 'compiling'), (-1, 'error in compilation')], verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodeError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_code', models.IntegerField(choices=[(-1, 'compile error'), (-2, 'decompress error')])),
                ('error_message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sandbox.Code')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_for', models.DateTimeField()),
                ('ready_at', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(0, 'submitted'), (1, 'running'), (2, 'exited'), (3, 'ready'), (-1, 'error')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_code', models.IntegerField()),
                ('error_message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exit_code', models.IntegerField()),
                ('result_json', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('capacity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('judge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sandbox.Code')),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('judge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sandbox.Code')),
                ('prerequisites', models.ManyToManyField(to='sandbox.Mission')),
            ],
        ),
        migrations.CreateModel(
            name='Soltoon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('primary_uniform', models.IntegerField(choices=[(0, '#ff00000'), (0, '#00ff000')])),
                ('secondary_uniform', models.IntegerField(choices=[(0, '#ff00000'), (0, '#00ff000')])),
                ('achievements', models.ManyToManyField(related_name='achieved_users', through='sandbox.Achievement', to='sandbox.Mission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soltoon', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('student_id', models.IntegerField()),
                ('department', models.CharField(max_length=40)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='information', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeagueCompetition',
            fields=[
                ('competition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sandbox.Competition')),
                ('competitors', models.ManyToManyField(related_name='competitions', to='sandbox.Code')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='sandbox.League')),
            ],
            bases=('sandbox.competition',),
        ),
        migrations.CreateModel(
            name='MissionCompetition',
            fields=[
                ('competition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sandbox.Competition')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missions', to='sandbox.Code')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='sandbox.Mission')),
            ],
            bases=('sandbox.competition',),
        ),
        migrations.AddField(
            model_name='competitionresult',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='sandbox.Competition'),
        ),
        migrations.AddField(
            model_name='competitionerror',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='error', to='sandbox.Competition'),
        ),
        migrations.AddField(
            model_name='competition',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='achievement',
            name='mission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sandbox.Mission'),
        ),
        migrations.AddField(
            model_name='achievement',
            name='soltoon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sandbox.Soltoon'),
        ),
    ]
